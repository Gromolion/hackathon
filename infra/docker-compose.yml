version: '3.7'

services:
  postgres:
    container_name: postgres
    image: postgres
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: 'pgsql'
      POSTGRES_USER: 'laravel'
      POSTGRES_PASSWORD: '4hack'
    volumes:
      - ./db:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U laravel -d pgsql" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  backend:
    container_name: backend
    build:
      context: ./app/backend/
      dockerfile: Dockerfile
    volumes:
      - ../project/backend:/var/www/html
      - ./app/backend/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.inidocker p
    environment:
      - PHP_IDE_CONFIG=serverName=Docker
    depends_on:
      - postgres
    restart: unless-stopped

  frontend:
    container_name: "frontend"
    build:
      context: ../project/frontend/
      dockerfile: Dockerfile
      target: 'develop-stage'
    environment:
      - VIRTUAL_HOST=staging-diagnostics-frontend.center-game.com
    depends_on:
      - postgres
    ports:
      - '8000:8000'
    volumes:
      - ../project/frontend:/app
    command: /bin/sh -c "yarn && QENV=development quasar dev"

  nginx:
    image: nginx:stable
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
    volumes:
      - ../project/backend:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
